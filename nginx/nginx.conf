events {
    worker_connections  1024;
}

http {
    # include /etc/nginx/fcgiwrap.conf;
    # include /app/map.json json;

    map $arg_cid $cid {
        'C001001' 'hello C001001';
        'C002002' 'hello C002002';
        default 'hello';
    }

    server {
        listen 80;

        location /api/data {
            return 200 '{"message": "Hello from Nginx!"}';
        }

        location /kmapi/ {
            proxy_set_header Host $host;
            proxy_pass http://nginx-ap-1:5000/;
        }

        # location ~* ^/tx/(.*)/entry {
        #     set $arg_cid $1;
        #     # echo $code;
        #     return 200 'Hello $cid!';
        # }

        # location /tx/([^/]+)/entry {
        #     set $user $1;
        #     return 200 'Hello $user!';
        #     # if ($user = c001001) {
        #     #     # Response for user c001001
        #     #     proxy_pass http://www.google.com;
        #     # }
        # }

        # location ~* ^/book_api/(.*)$ {
        #     proxy_set_header X-Real-IP  $remote_addr;
        #     proxy_set_header X-Forwarded-For $remote_addr;
        #     proxy_set_header Host $host;
        #     # proxy_pass http://192.168.0.100:8801/$1$is_args$args;
        #     # client_max_body_size 5M;
        #     # rewrite "^/book_api/(.*)" /$1 break;
        #     return 200 'Hello from Nginx! $1, $is_args, $args';
        # }

        # # location /lookup_data {
        # #     internal;
        # #     include /app/lookup_script.sh;
        # #     # root /app/lookup_script.sh;
        # #     # break;
        # #     # content_by_lua_block {
        # #     #     io.popen("bash /app/lookup_script.sh")
        # #     # };
        # # }
        # # location ~* ^/user/(.+) {
        # #     set $user $1;
        # #     json_decode $json_map;
        # #     if ($json_map[$user]) {
        # #         return 200 $json_map[$user];
        # #     }
        # #     return 404 'User not found';
        # # }
        location /cgi-bin/ {
            # Disable gzip (it makes scripts feel slower since they have to complete
            # before getting gzipped)
            gzip off;

            # Set the root to /usr/lib (inside this location this means that we are
            # giving access to the files under /usr/lib/cgi-bin)
            root /usr/lib;

            # Fastcgi socket
            fastcgi_pass  unix:/var/run/fcgiwrap.socket;

            # Fastcgi parameters, include the standard ones
            include /etc/nginx/fastcgi_params;

            # Adjust non standard parameters (SCRIPT_FILENAME)
            fastcgi_param SCRIPT_FILENAME  /usr/lib$fastcgi_script_name;
        }

        location ~* ^/tx/(.*)/entry {
            set $arg_cid $1;
            # Disable gzip (it makes scripts feel slower since they have to complete
            # before getting gzipped)
            gzip off;

            # Set the root to /usr/lib (inside this location this means that we are
            # giving access to the files under /usr/lib/cgi-bin)
            root /usr/lib;
            # return 200 '$fastcgi_script_name';
            # Fastcgi socket
            fastcgi_pass  unix:/var/run/fcgiwrap.socket;

            # Fastcgi parameters, include the standard ones
            include /etc/nginx/fastcgi_params;

            # Adjust non standard parameters (SCRIPT_FILENAME)
            fastcgi_param SCRIPT_FILENAME  /usr/lib/cgi-bin/entry.cgi;

            fastcgi_param QUERY_STRING "cid=$arg_cid";
        }
    }
}